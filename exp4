import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Create sample dataset
data = {
    'ID': range(1, 11),
    'Age': np.random.randint(18, 65, size=10),
    'Income': np.random.randint(30000, 90000, size=10),
    'Gender': ['Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male'],
    'Education': ['High School', 'Bachelor', 'Master', 'PhD', 'Bachelor', 'Master', 'Bachelor', 'PhD', 'High School', 'Master']
}

# Create DataFrame
df = pd.DataFrame(data)

# Show first 5 records
print("First 5 rows:")
print(df.head())
print("\nStatistical Description:")
print(df.describe())

# Check for null values
print("\nNull values in each column:")
print(df.isnull().sum())

# Unique values in Gender and Education
print("\nUnique values in Gender column:")
print(df['Gender'].unique())

print("\nUnique values in Education column:")
print(df['Education'].unique())

# Select specific columns
selected_columns = df[['Age', 'Income']]
print("\nSelected Columns (Age & Income):")
print(selected_columns.head())

# Filtered Data - Age > 30
filtered_data = df[df['Age'] > 30]
print("\nFiltered Data (Age > 30):")
print(filtered_data)

# Filtered Rows - Male & Masterâ€™s degree
filtered_rows = df[(df['Gender'] == 'Male') & (df['Education'] == 'Master')]
print("\nFiltered Rows (Male with Master's):")
print(filtered_rows)

# ---------- Visualization ----------

# Histogram of Age
plt.hist(df['Age'], bins=5, edgecolor='black')
plt.title('Age Distribution')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()

# Boxplot of Income
plt.boxplot(df['Income'])
plt.title('Income Distribution')
plt.ylabel('Income')
plt.show()

# Bar Chart of Gender
gender_counts = df['Gender'].value_counts()
gender_counts.plot(kind='bar', color='skyblue')
plt.title('Gender Distribution')
plt.xlabel('Gender')
plt.ylabel('Count')
plt.show()

# Pie Chart of Education
education_counts = df['Education'].value_counts()
education_counts.plot(
    kind='pie',
    autopct='%1.1f%%',
    colors=['gold', 'lightcoral', 'lightgreen', 'lightskyblue']
)
plt.title('Education Distribution')
plt.ylabel('')
plt.show()
